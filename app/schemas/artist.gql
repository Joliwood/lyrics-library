type Artist {
  id: Int!
  # email row exists in table but is visible only to the artist himself
  # email: String
  name: String!
  favorites: [SongOnAlbum]
  picture: String
  country: String
  albums: [Album]
  songs: [Song]
}

type ArtistUser {
  email: String!
  name: String!
  picture: String
  country: String
  albums: [Album]
}

type JWT {
  token: String
  expire_at: String
}

input LoginInput {
  email: String!
  password: String!
}

input ArtistUpdateInput {
  email: String
  password: String
  picture: String
  # the favorite input will be in artist_like_song schema
  # favorites: [SongOnAlbum]
  name: String
  country: String
  # songs: [Song]
}
